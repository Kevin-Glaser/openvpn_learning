#  OpenVPN 3 Linux client -- Next generation OpenVPN client
#
#  Copyright (C) 2018         OpenVPN Inc. <sales@openvpn.net>
#  Copyright (C) 2018         David Sommerseth <davids@openvpn.net>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as
#  published by the Free Software Foundation, version 3 of the
#  License.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

##
# @file  bash_completion_openvpn3.sh
#
# @brief  A bash_completion helper script for the openvpn3 program.
#         This script makes use of the openvpn3 shell-completion command
#         which provides up-to-date insight on the various commands, options
#         and arguments.
#         Also works with zsh after loading bascomphinit
#         (autoload -U +X bashcompinit && bashcompinit)

_openvpn3_completion()
{
	local first cur prev opts base
	COMPREPLY=()
	first=${COMP_WORDS[1]}
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"

	if [ $COMP_CWORD -eq 1 ]; then
		# The first argument is always an openvpn3 command
		o3cmds="$(openvpn3 shell-completion --list-commands)"
		COMPREPLY=( $( compgen -W "$o3cmds" $cur ) )
	elif [ $COMP_CWORD -gt 1 ]; then
		selection=""
		if [ "${cur:0:2}" == "--" -o "${cur:0:1}" == "-" ]; then
			# If the argument starts with '-' or '--' provide list of options
			selopts="-W $(openvpn3 shell-completion --list-options $first)"
		else
                        # Some options can get some extra help from bash
                        case "${prev}" in
                        "--config")  # Takes file names
                            # Prepare a simple filter, providing partial matching
                            filter="cat" # by default everything passes
                            if [ -n "$cur" ]; then
                                filter="grep -E ^$cur"
                            fi
                            # Only list files which most likely are OpenVPN configuration files
                            selopts="-W $(grep -sm1 -E '(client|remote |port |lport |rport |key |cert |ca )' *.conf *.ovpn | cut -d: -f1 | $filter)"
                            ;;

                        "--grant"|"--revoke") # Takes username (or UID, which we don't tackle here)
                            selopts="-u"
                            ;;
                        *)
			    # Otherwise try to fill out with possible argument values for the
			    # provided option
			    selopts="-W $(openvpn3 shell-completion --list-options $first --arg-help $prev)"
                            ;;
                        esac
		fi
		COMPREPLY=( $( compgen "${selopts}" -- $cur ) )
	fi
}

complete -F _openvpn3_completion openvpn3
